@using AIStoryBuilders.Models;
@using AIStoryBuilders.Services
@using static AIStoryBuilders.AI.OrchestratorMethods
@inherits OwningComponentBase
<div Style="height:160px;overflow:auto;">
    <RadzenTree AllowCheckBoxes="true" AllowCheckChildren=false @bind-CheckedValues=@CheckedValues Style="width: 100%; height: 150px" Data=@colCharacters>
        <RadzenTreeLevel Expanded="@(data => true)" HasChildren="@(data => false)" />
    </RadzenTree>
</div>
<br />
<div class="rz-text-align-center">
    <RadzenButton Text="Add Characters and Attributes" ButtonStyle="ButtonStyle.Primary"
                  Click=@CloseDialog />
</div>
<div>
    <p class="rz-text-align-center" style="font-size:xx-small">(Automatic attribute detection can be disabled in Settings.)</p>
</div>
@code {
    [Parameter] public IEnumerable<string> colCharacters { get; set; }
    [Parameter] public DialogService DialogReference { get; set; }

    AIStoryBuildersService AIStoryBuildersService;

    IEnumerable<object> checkedValues;
    IEnumerable<object> CheckedValues
    {
        get => checkedValues;
        set
        {
            checkedValues = value;
        }
    }

    protected override void OnInitialized()
    {
        AIStoryBuildersService = (AIStoryBuildersService)ScopedServices.GetService(typeof(AIStoryBuildersService));
    }

    private void CloseDialog()
    {
        var SelectedCharacters = (from item in CheckedValues
                                  select new AIStoryBuilders.Models.SimpleCharacterSelector())
                        .ToList();

        var value = SelectedCharacters;
        //DialogReference.Close(colSimpleCharacter);
    }
}
