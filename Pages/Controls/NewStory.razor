@using AIStoryBuilders.Models;
@inject DialogService dialogService

@if (@Message != "")
{
    <h4 style="color:red">@Message</h4>
}
<div Class="rz-p-0 rz-p-md-12">
    <RadzenRow Gap="1rem">
        <RadzenColumn Size="12" SizeSM="12">
            <RadzenStack>
                <RadzenFormField Text="Story Title:" Variant="@variant">
                    <RadzenTextBox @bind-Value="@objStory.Title" />
                </RadzenFormField>
                <RadzenFormField Text="Style:" Variant="@variant">
                    <RadzenDropDown Data=@colStyles @bind-Value="@objStory.Style" />
                </RadzenFormField>
                <RadzenFormField Text="Theme:" Variant="@variant">
                    <RadzenTextArea @bind-Value="@objStory.Theme" />
                </RadzenFormField>
                <RadzenFormField Text="Synopsis:" Variant="@variant">
                    <RadzenTextArea @bind-Value="@objStory.Synopsis" />
                </RadzenFormField>
            </RadzenStack>
        </RadzenColumn>        
    </RadzenRow>
</div>
<br />
<div class="row">
    <div class="col">
        <RadzenButton Text="Save" ButtonStyle="ButtonStyle.Success"
                      Click="Save"
                      Style="margin-bottom: 10px; width: 150px" />
    </div>
</div>
@code {
    Story objStory = new Story();
    IEnumerable<string> colStyles;
    string Message = "";
    Variant variant = Variant.Outlined;

    protected override void OnInitialized()
    {
        // Add sample data to the Styles dropdown
        colStyles = new List<string>() 
        { 
            "General Fiction",
            "Science Fiction",
            "Fantasy",
            "Horror", 
            "Mystery", 
            "Romance", 
            "Thriller", 
            "Western" 
        };

        objStory.Style = "General Fiction";
    }

    private void Save()
    {
        try
        {
            Message = "";

            if (objStory.Title.Length < 1)
            {
                Message = "Story Title is required";
                return;
            }

            dialogService.Close(objStory);

        }
        catch (Exception ex)
        {
            Message = ex.Message;
        }
    }
}
