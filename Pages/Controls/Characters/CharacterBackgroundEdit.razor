@using AIStoryBuilders.Models;
@inject NotificationService NotificationService
@inject DialogService DialogService
<p><b>Description:</b> <RadzenDropDown Data=@colDescriptions @bind-Value="@objCharacterBackground.Description" /></p>
<p> <RadzenTextBox @bind-Value="@objCharacterBackground.Description" /></p>
@code {
    [Parameter] public CharacterBackground objCharacterBackground { get; set; }

    List<string> colDescriptions = new List<string>();

    protected override void OnInitialized()
    {
        try
        {
            // Add colDescriptions
            switch (objCharacterBackground.Type)
            {
                case "Appearance":
                    colDescriptions = new List<string>()
                    {
                        "Height",
                        "Weight",
                        "Hair Color",
                        "Eye Color",
                        "Ethnicity",
                        "Race",
                        "Disability",
                        "Gender",
                        "Sexuality",
                        "Clothing",
                        "Accessories",
                        "Jewelry",
                        "Makeup",
                        "Scars",
                        "Tattoos",
                        "Birthmarks",
                        "Other"
                    };
                    break;
                case "Goals":
                    colDescriptions = new List<string>()
                    {
                        "Strong Goal",
                        "Weak Goal",
                    };
                    break;
                case "History":
                    colDescriptions = new List<string>()
                    {
                        "Experienced",
                        "Remembered",
                        "Recent",
                        "Pleasant",
                        "Painful",
                    };
                    break;
                default:
                    colDescriptions = new List<string>();
                    break;
            };

            // Set the default description
            objCharacterBackground.Description = colDescriptions[0];
        }
        catch (Exception ex)
        {
            NotificationService.Notify(new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Error",
                    Detail = ex.Message,
                    Duration = 4000
                });
        }
    }
}
